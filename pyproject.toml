[project]
name = "nonebot-adapter-feishu"
version = "2.6.2"
description = "feishu(larksuite) adapter for nonebot2"
authors = [{ name = "StarHeartHunt", email = "starheart233@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
keywords = ["bot", "feishu", "larksuite"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Robot Framework",
  "Framework :: Robot Framework :: Library",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
]

requires-python = ">=3.9, <4.0"
dependencies = ["nonebot2 ~=2.2", "cashews ~=7.0", "pycryptodome ~=3.18"]

[project.urls]
homepage = "https://feishu.adapters.nonebot.dev/"
repository = "https://github.com/nonebot/adapter-feishu"
documentation = "https://feishu.adapters.nonebot.dev/"

[tool.poetry]
packages = [{ include = "nonebot" }]

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.0"
isort = "^5.10.1"
black = "^24.0.0"
nonemoji = "^0.1.2"
pre-commit = "^4.0.0"
nonebot2 = { git = "https://github.com/nonebot/nonebot2.git", branch = "master", extras = [
  "fastapi",
  "httpx",
] }
nonebug = { git = "https://github.com/nonebot/nonebug.git", branch = "master" }

[tool.poetry.group.test.dependencies]
nonebug = "^0.4.0"
wsproto = "^1.2.0"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.24.0"
werkzeug = ">=2.3.6,<4.0.0"

[tool.poetry.group.docs.dependencies]
nb-autodoc = { git = "https://github.com/nonebot/nb-autodoc.git" }

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
addopts = ["--cov=nonebot/adapters/feishu", "--cov-report=term-missing"]
filterwarnings = ["error", "ignore::DeprecationWarning"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "I",     # isort
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "TID",   # flake8-tidy-imports
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["nonebot", "tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
defineConstant = { PYDANTIC_V2 = true }
executionEnvironments = [
  { root = "./tests", extraPaths = [
    "./",
  ] },
  { root = "./" },
]

typeCheckingMode = "standard"
reportShadowedImports = false
disableBytesTypePromotions = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
